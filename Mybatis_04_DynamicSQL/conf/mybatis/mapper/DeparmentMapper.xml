<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wx.mybatis.dao.DeparmentMapper">
	
	<select id="getDeptById" resultType="com.wx.mybatis.bean.Department">
		select id,dept_name departmentName from tbl_dept where id = #{id}
	</select>
	
	<resultMap type="dept" id="deptReturnMap">
		<id column="id" property="id"/>
		<result column="dept_name" property="departmentName"/>
		
		<!-- property:对应javabean里的需要关联的属性!! 
			 ofType:指明类型
		-->
		<collection property="emps" ofType="emp">
			<id column="eid" property="id"/>
			<result column="last_name" property="lastName"/>
			<result column="email" property="email"/>
			<result column="gender" property="gender"/>
		</collection>
	</resultMap>
	<select id="getDeptByIdPlus" resultMap="deptReturnMap">
		select d.id,d.dept_name,e.id eid,e.last_name,e.email,e.gender
		from tbl_dept d 
		left join tbl_employee e
		on d.id = e.d_id
		where d.id = 1
	</select>
	
	<resultMap type="dept" id="Mydept">
		<id column="id" property="id"/>
		<result column="dept_name" property="departmentName"/>
		<collection property="emps" select="com.wx.mybatis.dao.EmployeeMapperPlus.getEmpBydept"
		column="{id=id}" fetchType="lazy">
		
		<!-- 
			如果要传多列的值进行级联查询，需要将多列的值封装成map形式传递
			column = { key1 = column1, key2 = column2 , ...}
			fetchType = "lazy":表示使用延迟加载. 
				- lazy:延迟
				- eager:立即
		 -->
		</collection>
	</resultMap>
	<!-- 注意
		 association用于一对一
		 collection用于一对多
	 -->
	<select id="getDeptByStep" resultMap="Mydept">
		select * from tbl_dept where dept_name = #{dept_name}
	</select>
	
</mapper>