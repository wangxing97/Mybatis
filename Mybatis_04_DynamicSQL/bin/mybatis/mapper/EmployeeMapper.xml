<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wx.mybatis.dao.EmployeeMapper">
<!-- namespace:命名空间    现在指定为接口的全类名
	 id:唯一表示  改为接口方法名
	 resultType:返回类型
	 #{id}:从传递过来的参数中取出id值
	 public Employee getEmpById(Integer id);
	 useGeneratedKeys="true":使用自增主键获取主键值
	 keyProperty:指定对应的主键属性，也就是mybatis获取到主键以后，将这个值封装给javaBean里的哪个属性
 -->
 	
	<select id="getEmpById" resultType="emp" databaseId="mysql">
	select * from tbl_employee where id = #{id}
	</select>
	
	<insert id="addEmp" parameterType="emp" useGeneratedKeys="true" keyProperty="id">
	insert into tbl_employee(last_name,email,gender) 
	values (#{lastName},#{email},#{gender})
	</insert>
	
	<insert id="addManyEmp" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
	insert into tbl_employee(last_name,email,gender)
	values
	<!-- 
		item表示集合中每一个元素进行迭代时的别名，
	    index指 定一个名字，用于表示在迭代过程中，每次迭代到的位置，
	    open表示该语句以什么开始，
	    separator表示在每次进行迭代之间以什么符号作为分隔 符，
	    close表示以什么结束。
	 -->
	 
	 <!--  返回类型在接口处设置返回类型即可。 Integer Long Boolean void -->
	<!-- <foreach collection="list" item="item" open="(" close=")" index="index" separator=",">
			#{item.lastName},
			#{item.email},
			#{item.gender}
	</foreach> -->
	<foreach collection="list" item="item" index="index" separator=",">
			(#{item.lastName},
			#{item.email},
			#{item.gender})
	</foreach>
	</insert>
	
	<update id="updateEmp" >
	update tbl_employee set last_name=#{lastName},email=#{email},gender=#{gender}
	where id=#{id}
	</update>
	
	<delete id="delteEmpById">
	delete from tbl_employee where id = #{id}
	</delete>
	
	<delete id="delManyEmp">
	delete from tbl_employee where id in
	<foreach collection="array" index="index" item="item" open="(" close=")" separator=",">
		#{item}
	</foreach>
	</delete>
	
	<select id="getEmpLike" resultType="emp">
	select * from tbl_employee where last_name like #{lastName}
	</select>
	
	<select id="getEmpLikeReturnMap" resultType="emp">
		select * from tbl_employee where last_name like #{lastName}
	</select>
	
</mapper>